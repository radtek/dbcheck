SET ECHO OFF;
SET FEEDBACK OFF;
SET HEADING OFF;
SET PAGESIZE 0;
SET TERMOUT OFF;
SET TRIMOUT ON;
SET TRIMSPOOL ON;
SET COLSEP '|';
SET LINESIZE 200;
ALTER SESSION SET NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS';
COL INSTANCE_NUMBER FOR 99;
COL INSTANCE_NAME FOR A10;
COL HOST_NAME FOR A10;
COL STARTUP_TIME FOR A20;
COL SYSDATE FOR A20;
COL STATUS FOR A8;
COL RUN_DATE FOR 9999;
SPOOL INSTANCE_STATUS.txt
SELECT INSTANCE_NUMBER,
       INSTANCE_NAME,
       HOST_NAME,
       STARTUP_TIME,
       SYSDATE,
       STATUS,
       ROUND(SYSDATE - STARTUP_TIME) RUN_DATE
  FROM GV$INSTANCE;
SPOOL OFF;
SPOOL INSTANCE_LOAD.txt
WITH SYS_LOAD AS
 (SELECT HST.SNAP_ID,
         (SELECT TO_CHAR(TRUNC(BEGIN_INTERVAL_TIME, 'HH24'), 'HH24')
            FROM DBA_HIST_SNAPSHOT
           WHERE SNAP_ID = HST.SNAP_ID
             AND INSTANCE_NUMBER = 1) HOURS,
         HST.INSTANCE_NUMBER,
         HST.VALUE
    FROM DBA_HIST_SYS_TIME_MODEL HST,
         (SELECT MIN(SNAP_ID) MIN_SNAP_ID, MAX(SNAP_ID) MAX_SNAP_ID
            FROM DBA_HIST_SNAPSHOT
           WHERE BEGIN_INTERVAL_TIME > TRUNC(SYSDATE - 1) - 0.5 / 24
             AND BEGIN_INTERVAL_TIME < TRUNC(SYSDATE) + 0.5 / 24) S
   WHERE HST.STAT_NAME = 'DB time'
     AND HST.SNAP_ID >= S.MIN_SNAP_ID
     AND HST.SNAP_ID <= S.MAX_SNAP_ID)
SELECT A.SNAP_ID,
       TO_CHAR(TRUNC(SYSDATE - 1), 'YYYY-MM-DD') DAY,
       A.HOURS,
       (SUM(CASE
              WHEN A.INSTANCE_NUMBER = 1 THEN
               B.VALUE
              ELSE
               0
            END) - SUM(CASE
                          WHEN A.INSTANCE_NUMBER = 1 THEN
                           A.VALUE
                          ELSE
                           0
                        END)) INSTANCE1,
       (SUM(CASE
              WHEN A.INSTANCE_NUMBER = 2 THEN
               B.VALUE
              ELSE
               0
            END) - SUM(CASE
                          WHEN A.INSTANCE_NUMBER = 2 THEN
                           A.VALUE
                          ELSE
                           0
                        END)) INSTANCE2,
       (SUM(CASE
              WHEN A.INSTANCE_NUMBER = 3 THEN
               B.VALUE
              ELSE
               0
            END) - SUM(CASE
                          WHEN A.INSTANCE_NUMBER = 3 THEN
                           A.VALUE
                          ELSE
                           0
                        END)) INSTANCE3
  FROM SYS_LOAD A, SYS_LOAD B
 WHERE A.SNAP_ID + 1 = B.SNAP_ID
   AND A.INSTANCE_NUMBER = B.INSTANCE_NUMBER
 GROUP BY A.SNAP_ID, A.HOURS
 ORDER BY SNAP_ID;
SPOOL OFF;
COL TABLESPACE_NAME FOR A30;
COL STATUS FOR A8;
COL TOT_MB FOR A12;
COL FREE_MB FOR A12;
COL USED_MB FOR A12;
COL USE_RATIO FOR A10;
SPOOL TABLESPACE_USAGE.txt
SELECT TOT.TABLESPACE_NAME,
       TBS.STATUS,
       'DATA',
       TO_CHAR(NVL(TOT.TOT_B / 1024 / 1024, 0), '999G999G999') TOT_MB,
       TO_CHAR(NVL(FREE.FREE_B / 1024 / 1024, 0), '999G999G999') FREE_MB,
       TO_CHAR(NVL((TOT.TOT_B - FREE.FREE_B) / 1024 / 1024, 0), '999G999G999') USED_MB,
       TO_CHAR((TOT.TOT_B - FREE.FREE_B) / TOT.TOT_B * 100, '990D00') USE_RATIO
  FROM (SELECT TABLESPACE_NAME, SUM(BYTES) TOT_B
          FROM DBA_DATA_FILES
         GROUP BY TABLESPACE_NAME) TOT,
       (SELECT TABLESPACE_NAME, SUM(BYTES) FREE_B
          FROM DBA_FREE_SPACE
         GROUP BY TABLESPACE_NAME) FREE,
       DBA_TABLESPACES TBS
 WHERE TOT.TABLESPACE_NAME = FREE.TABLESPACE_NAME(+)
   AND TOT.TABLESPACE_NAME = TBS.TABLESPACE_NAME
   AND TBS.CONTENTS = 'PERMANENT'
UNION ALL
SELECT TOT.TABLESPACE_NAME,
       TBS.STATUS,
       'UNDO',
       TO_CHAR(NVL(TOT.TOT_B / 1024 / 1024, 0), '999G999G999') TOT_MB,
       TO_CHAR(NVL((TOT.TOT_B - USED.USED_B) / 1024 / 1024, 0), '999G999G999') FREE_MB,
       TO_CHAR(NVL(USED.USED_B / 1024 / 1024, 0), '999G999G999') USED_MB,
       TO_CHAR(NVL(USED.USED_B, 0) / TOT.TOT_B * 100, '990D00') USE_RATIO
  FROM (SELECT TABLESPACE_NAME, SUM(BYTES) TOT_B
          FROM DBA_DATA_FILES
         GROUP BY TABLESPACE_NAME) TOT,
       (SELECT TABLESPACE_NAME, SUM(BYTES) USED_B
          FROM DBA_UNDO_EXTENTS
         WHERE STATUS != 'EXPIRED'
         GROUP BY TABLESPACE_NAME) USED,
       DBA_TABLESPACES TBS
 WHERE TOT.TABLESPACE_NAME = USED.TABLESPACE_NAME(+)
   AND TOT.TABLESPACE_NAME(+) = TBS.TABLESPACE_NAME
   AND TBS.CONTENTS = 'UNDO'
UNION ALL
SELECT TOT.TABLESPACE_NAME,
       'ONLINE',
       'TEMP',
       TO_CHAR(NVL(TOT.TOT_B / 1024 / 1024, 0), '999G999G999') TOT_MB,
       TO_CHAR(NVL((TOT.TOT_B - USED.USED_B) / 1024 / 1024, 0), '999G999G999') FREE_MB,
       TO_CHAR(NVL(USED.USED_B / 1024 / 1024, 0), '999G999G999') USED_MB,
       TO_CHAR((USED.USED_B) / TOT.TOT_B * 100, '990D00') USE_RATIO
  FROM (SELECT TABLESPACE_NAME, SUM(BYTES) TOT_B
          FROM DBA_TEMP_FILES
         GROUP BY TABLESPACE_NAME) TOT,
       (SELECT SS.TABLESPACE_NAME,
               SUM((SS.USED_BLOCKS * TS.BLOCK_SIZE)) USED_B
          FROM GV$SORT_SEGMENT SS, DBA_TABLESPACES TS
         WHERE SS.TABLESPACE_NAME = TS.TABLESPACE_NAME
         GROUP BY SS.TABLESPACE_NAME) USED
 WHERE TOT.TABLESPACE_NAME = USED.TABLESPACE_NAME(+)
 ORDER BY 7;
SPOOL OFF;
COL NAME FOR A30;
COL STATUS FOR A8;
COL TYPE FOR A10;
COL TOTAL_MB FOR A12;
COL FREE_MB FOR A12;
COL USED_MB FOR A12;
COL USABLE_FILE_MB FOR A12;
COL USED_RATIO FOR A10;
SPOOL ASM_USAGE.txt;
SELECT NAME,
       STATE,
       TYPE,
       TO_CHAR(NVL(TOTAL_MB, 0), '999G999G999') TOTAL_MB,
       TO_CHAR(NVL(FREE_MB, 0), '999G999G999') FREE_MB,
       TO_CHAR(NVL((TOTAL_MB - FREE_MB), 0), '999G999G999') USED_MB,
       TO_CHAR(NVL(USABLE_FILE_MB, 0), '999G999G999') USABLE_FILE_MB,
       TO_CHAR(NVL((TOTAL_MB - USABLE_FILE_MB) / TOTAL_MB * 100, 0),
               '990D00') USED_RATIO
  FROM V$ASM_DISKGROUP;
SPOOL OFF;
